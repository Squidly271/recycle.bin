#!/bin/bash
# Usage:
# start|stop|restart|buttonstart|refresh|empty|update|purge|cron|browse|clear|share.
#
plugin="recycle.bin"
#
vfs_recycle_start()
{
	logger "Starting Recycle Bin" -t"$PROG_NAME"

	# Is vfs_recycle running?
	if [ ! -e /var/run/${plugin}.pid ]; then
		echo "Starting Recycle Bin..."

		# Add vfs_recycle to smb-extra.conf.
		if [[ `grep '#vfs_recycle' /boot/config/smb-extra.conf` = "" ]]; then
			printf "\n" >> /boot/config/smb-extra.conf
			cat /boot/config/plugins/${plugin}/config/smb-extra.conf >> /boot/config/smb-extra.conf
		fi

		# Adjust smb-extra.conf user set parameters.
		if [ "$LOG" = "yes" ]; then
			if [[ `grep 'syslog only = No' /boot/config/smb-extra.conf` = "" ]]; then
				sed -i "/syslog only =/c\   syslog only = No" /boot/config/smb-extra.conf
			fi
		else
			if [[ `grep 'syslog only = Yes' /boot/config/smb-extra.conf` = "" ]]; then
				sed -i "/syslog only =/c\   syslog only = Yes" /boot/config/smb-extra.conf
			fi
		fi

		# If cron run is enabled, add cron job.
		if [ "$SCHEDRUN" = "hourly" ]; then
			printf "# Purge recycle bin every hour on the hour:\n" > /tmp/${plugin}/recyclebin.cron
			printf "0 * * * * ${DOCROOT}/plugins/${plugin}/scripts/rc.${plugin} cron &> /dev/null\n\n" >> /tmp/${plugin}/recyclebin.cron
		elif [ "$SCHEDRUN" = "daily" ]; then
			printf "# Purge recycle bin at 5:00 AM every day:\n" > /tmp/${plugin}/recyclebin.cron
			printf "0 5 * * * ${DOCROOT}/plugins/${plugin}/scripts/rc.${plugin} cron &> /dev/null\n\n" >> /tmp/${plugin}/recyclebin.cron
		elif [ "$SCHEDRUN" = "weekly" ]; then
			printf "# Purge recycle bin at 5:00 AM on the first day of the week:\n" > /tmp/${plugin}/recyclebin.cron
			printf "0 5 * * 0 ${DOCROOT}/plugins/${plugin}/scripts/rc.${plugin} cron &> /dev/null\n\n" >> /tmp/${plugin}/recyclebin.cron
		fi

		# Create pid file to show the recycle bin is running.
		echo $$ > /var/run/${plugin}.pid

		# Run recycle bin setup to configure vfs_recycle
		${DOCROOT}/plugins/${plugin}/scripts/restart_services

		# Restart samba
		/etc/rc.d/rc.samba restart 1>/dev/null

		if [ "$BACKGROUND" != "yes" ]; then
			# Refresh trash sizes
			vfs_recycle_refresh
		fi

		if [ "$BACKGROUND" != "no" ]; then
			printf "# Refresh Recycle Bin trash sizes every five minutes:\n" >> /tmp/${plugin}/recyclebin.cron
			printf "*/5 * * * * ${DOCROOT}/plugins/${plugin}/scripts/get_trashsizes &> /dev/null\n\n" >> /tmp/${plugin}/recyclebin.cron
		fi

		# Move cron file to flash
		if [ -f /tmp/${plugin}/recyclebin.cron ]; then
			# Move the cron file
			mv /tmp/${plugin}/recyclebin.cron /boot/config/plugins/${plugin}/recyclebin.cron 2>/dev/null
		else
			# Remove recycle bin cron file.
			rm -f /boot/config/plugins/${plugin}/recyclebin.cron
		fi

		# Reload crons.
		/usr/local/sbin/update_cron

		# Update recycle bin permissions.
		chmod $DIR_MODE $(find /mnt/*/*/.Recycle.Bin -type d) 2>/dev/null
	else
		echo "Recycle Bin is already running"
		logger "Recycle Bin is already running" -t"$PROG_NAME"
	fi
}

vfs_recycle_stop()
{
	logger "Stopping Recycle Bin" -t"$PROG_NAME"

	# Is vfs_recycle running?
	if [ -e /var/run/${plugin}.pid ]; then
		echo "Stopping Recycle Bin..."

		# Remove dynamix recycle bin cron file (Fix for cron being in the wrong directory).
		rm -f /boot/config/plugins/dynamix/recyclebin.cron

		# Remove recycle bin cron file.
		rm -f /boot/config/plugins/${plugin}/recyclebin.cron

		# Remove pid file to show recycle bin is not running.
		rm -f /var/run/${plugin}.pid

		if [ "$shutdown" != "shutdown" ]; then
			# Run recycle bin setup to configure vfs_recycle
			${DOCROOT}/plugins/${plugin}/scripts/restart_services

			# Restart samba
			/etc/rc.d/rc.samba restart 1>/dev/null

			# Clear out the recycle bin browse and the trash sizes
			# Remove browsing directory.
			rm -rf /mnt/RecycleBin

			if [ "$BACKGROUND" != "yes" ]; then
				# Clear trashsizes and start over
				echo -n "0" > /tmp/recycle.bin/trashsize
				rm -f /tmp/recycle.bin/share_trashsize
			fi

			# Remove pid file to show cron script is not running.
			rm -f /var/run/rc.${plugin}.pid
		fi
	else
		echo "Recycle Bin is not running"
		logger "Recycle Bin is not running" -t"$PROG_NAME"
	fi
}

vfs_recycle_restart()
{
	# Stop vfs recycle.
	vfs_recycle_stop

	sleep 3

	# Start vfs recycle
	vfs_recycle_start
}

vfs_recycle_buttonstart()
{
	echo "Enabling Recycle Bin..."
	if [ -f $CONFIG ]; then
		sed -i "s/"disable"/"enable/"" $CONFIG
		vfs_recycle_start
	fi
}

vfs_recycle_update()
{
	if [ -e /var/run/${plugin}.pid ]; then
		# Stop vfs recycle.
		vfs_recycle_stop

		sleep 1
	fi

	# Start vfs recycle if service is enabled and not already running.
	if [ "$SERVICE" = "enable" ]; then
		vfs_recycle_start
	fi
}

vfs_recycle_refresh()
{
	# Refresh trash sizes in the background
	${DOCROOT}/plugins/${plugin}/scripts/get_trashsizes 2>/dev/null &
}

vfs_recycle_empty()
{
	echo "Emptying Recycle Bin..."

	# Remove deleted files from all shares.
	rm -rf /mnt/RecycleBin/User\ Shares/*/ 2>/dev/null
	rm -rf /mnt/RecycleBin/Disk/*/ 2>/dev/null
	rm -rf /mnt/RecycleBin/Unassigned/*/ 2>/dev/null
	rm -rf /mnt/RecycleBin/Flash/* 2>/dev/null

	if [ "$BACKGROUND" != "yes" ]; then
		# Refresh trash sizes
		vfs_recycle_refresh
	fi

	echo "Recycle Bin has been emptied"
	logger "User: Recycle Bin has been emptied" -t"$PROG_NAME"
}

vfs_recycle_remove()
{
	# Wait for the trashsize to not be running.
	while [ -e /var/run/trashsize.pid ]; do
		sleep 1
	done

	# Create pid file to show cron script is running.
	echo $$ > /var/run/rc.${plugin}.pid

	# Remove aged files.
	find -L /mnt/RecycleBin/User\ Shares/ -ignore_readdir_race -mindepth 2 -atime +$AGE -delete &>/dev/null
	find -L /mnt/RecycleBin/Disk/ -ignore_readdir_race -mindepth 2 -atime +$AGE -delete &>/dev/null
	find -L /mnt/RecycleBin/Unassigned/ -ignore_readdir_race -mindepth 2 -atime +$AGE -delete &>/dev/null
	find -L /mnt/RecycleBin/Flash/ -ignore_readdir_race -mindepth 2 -atime +$AGE -delete &>/dev/null

	# Remove pid file to show cron script is not running.
	rm -f /var/run/rc.${plugin}.pid

	if [ "$BACKGROUND" != "yes" ]; then
		# Refresh trash sizes
		vfs_recycle_refresh
	fi
}

vfs_recycle_purge()
{
	echo "Removing aged files..."

	vfs_recycle_remove

	echo "Aged files removed"
	logger "User: Files older than $AGE days have been removed" -t"$PROG_NAME"
}

vfs_recycle_share()
{
	echo Emptying \'$(basename "$share_empty")\' Recycle Bin...

	# Be sure we only remove files from /mnt/RecycleBin/
	DIR=$(dirname "${share_empty}")
	if [[ "$DIR" == *"/mnt/RecycleBin"* ]]; then
		rm -rf "$share_empty"

		# Refresh trash sizes
		vfs_recycle_refresh

		logger "Share '$share_empty' Recycle Bin has been emptied." -t"$PROG_NAME"
	else
		logger "Error: Share '$share_empty' cannot be emptied!  Not a valid Recycle Bin." -t"$PROG_NAME"
	fi
}

vfs_recycle_cron()
{
	vfs_recycle_remove

	logger "Scheduled: Files older than $AGE days have been removed" -t"$PROG_NAME"

	if [ "$NOTIFY" = "yes" ]; then
		${DOCROOT}/webGui/scripts/notify -e "Unraid Server Notice" -s "Recycle Bin" -d "Scheduled: Files older than $AGE days have been removed" -i "normal" -l "/Settings/RecycleBin"
	fi
}

vfs_recycle_browse()
{
	# Recycle bin browsing directory contains symlinks to shares.
	cd /tmp

	# Set up browsing directories for symlinks.
	mkdir "RecycleBin"
	mkdir "RecycleBin/Disk"
	mkdir "RecycleBin/User Shares"
	mkdir "RecycleBin/Unassigned"
	mkdir "RecycleBin/Root Shares"

	# Disk, user, cache, and unassigned symlinks.
	DIRS=`ls /mnt/`
	for DIR in $DIRS
	do
		if [ "${DIR}" = "disks" ]; then
			ls /mnt/disks | while read line
			do
				if [ -d /mnt/disks/"${line}"/.Recycle.Bin ]; then
					ln -sf /mnt/disks/"${line}"/.Recycle.Bin RecycleBin/Unassigned/"${line}"
				fi
			done
		elif [ "${DIR}" = "user" ]; then
			ls /mnt/user/ | while read line
			do
				if [ -d /mnt/user/"${line}"/.Recycle.Bin ]; then
					ln -sf /mnt/user/"${line}"/.Recycle.Bin RecycleBin/User\ Shares/"${line}"
				fi
			done
		elif [ "${DIR}" = "rootshare" ]; then
			ls /mnt/rootshare/ | while read line
			do
				if [ -d /mnt/rootshare/"${line}"/.Recycle.Bin ]; then
					ln -sf /mnt/rootshare/"${line}"/.Recycle.Bin RecycleBin/Root\ Shares/"${line}"
				fi
			done
		elif [ "${DIR}" != "user0" ]; then
			if [ -d /mnt/${DIR}/.Recycle.Bin ]; then
				ln -sf /mnt/${DIR}/.Recycle.Bin RecycleBin/Disk/${DIR}
			fi
		fi
	done

	# Flash symlink.
	ln -sf /boot/.Recycle.Bin RecycleBin/Flash

	# Remove /mnt browsing directory.
	rm -rf /mnt/RecycleBin

	# Move the new RecycleBin to /mnt.
	mv /tmp/RecycleBin /mnt/RecycleBin

	# Set ownership of RecycleBin folder.
	chown nobody:users /mnt/RecycleBin
}

vfs_recycle_clear() {
	# Clear the samba log.
	echo "" > /var/log/samba/log.smbd
}

# read our configuration.
CONFIG="/boot/config/plugins/${plugin}/${plugin}.cfg"
source $CONFIG

# Trim leading and trailing spaces
AGE=$AGE | tr -d ' '

# Set default AGE if blank in settings
if [ "$AGE" = "" ]; then
	AGE="7"
fi
if [ "$DIR_MODE" = "" ]; then
	DIR_MODE="0777"
fi

PROG_NAME="Recycle Bin"
DOCROOT=`grep -Po '^chdir = \K.*' /etc/php-fpm.d/www.conf 2>/dev/null`
if [ -z ${DOCROOT} ];then
	DOCROOT="/usr/local/emhttp"
fi

case "$1" in
	'start')
		vfs_recycle_start
	;;
	'stop')
		shutdown=$2
		vfs_recycle_stop
	;;
	'restart')
		vfs_recycle_restart
	;;
	'buttonstart')
		vfs_recycle_buttonstart
	;;
	'refresh')
		vfs_recycle_refresh
	;;
	'empty')
		vfs_recycle_empty
	;;
	'update')
		vfs_recycle_update
	;;
	'purge')
		vfs_recycle_purge
	;;
	'cron')
		vfs_recycle_cron
	;;
	'browse')
		vfs_recycle_browse
	;;
	'clear')
		vfs_recycle_clear
	;;
	'share')
		share_empty=$2
		vfs_recycle_share
	;;
	*)
		echo "usage $0 start|stop|restart|buttonstart|refresh|empty|update|purge|cron|browse|clear|share"
esac
